#
# Copyright (c) 2023.
# By Yowyob. @Author FantasyMachine
#
#============================================================================
#  Configure App
#============================================================================
server:
  port: ${SERVER_PORT:8085}
  shutdown: graceful
  error:
    whitelabel:
      enabled: false
  ssl:
    enabled: false
    trust-store-type: JKS
    trust-store-provider: SUN
    trust-store: classpath:letsgo-ssl-store.jks
    trust-store-password: ys0b@w-cm


encrypt:
  key: qe4fsLLRFkKWU+teQnJe2cH8tOk3ocvryyQaRDXqbOWZXovuMvmlcWdgQMp0XyXCSG6b25

eureka:
  client:
    register-with-eureka: false
    fetch-registry: false



logging:
  file.name: ${LOG_FILE:./logs/myLog.log}
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO

management:
  endpoint:
    prometheus:
      enabled: true
    metrics:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'

  prometheus:
    metrics:
      export:
        enabled: true

spring:
  application:
    name: trip-service
  profiles:
    active:
      - prod

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://88.198.150.195:8099/AUTH-SERVICE


  #============================================================================
  #   Configure GraphQl Server
  #============================================================================
  graphql:
    graphiql:
      enabled: true


  #============================================================================
  #   Configure Cassandra
  #============================================================================
  cassandra:
    request:
      timeout: 5s
    contact-points: ${CASSANDRA_CONTACT_POINTS:88.198.150.195:9042}
    connection:
      connect-timeout: 10s
      init-query-timeout: 10s
    keyspace-name: trip_service
    schema-action: create_if_not_exists
    local-datacenter: datacenter1
    username: fantasy
    password: fantasy



  #============================================================================
  #   Configure Open Api for documentation
  #============================================================================
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  main:
    allow-bean-definition-overriding: true

  #============================================================================
  #   Configure Spring Cloud
  #============================================================================

  cloud:
    config:
      enabled: true
      uri:
        - https://${CONFIG_SERVER_HOST:localhost}:${CONFIG_SERVER_PORT:4808}/
      tls:
        enabled: true
        trustStore: classpath:letsgo-ssl-store.jks
        trustStorePassword: ys0b@w-cm
        trustStoreType: jks
        keyStore: classpath:letsgo-ssl-store.jks
        keyStoreType: jks
        keyPassword: ys0b@w-cm
        keyStorePassword: ys0b@w-cm
      name: driver-service
      username: yowyob-service
      password: ${CONFIG_SERVER_PASSWORD:52575234647119692221}
    server:
      encrypt:
        enabled: false



  # elastic : C9zmGRdKC0UA9GyE5QI0
  # fingerprint:  0c2b80f3af8af8b568c612054fe2c5a4ea7e04dd6feb20fd7e0dc55769fee81f


  #============================================================================
  #   Configure Cache
  #============================================================================
  cache:
    type: redis


  #============================================================================
  #   Configure Main Scheduler Properties
  #============================================================================
  quartz:
    properties:
      org.quartz.scheduler.instanceName: trip-scheduler-service
      org.quartz.scheduler.instanceId: AUTO


      #org.quartz.jobStore.class=net.joelinn.quartz.jobstore.RedisJobStore
      #============================================================================
      #   Configure ThreadPool
      #============================================================================
      org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
      org.quartz.threadPool.threadCount: 25
      org.quartz.threadPool.threadPriority: 5
      org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true

  #============================================================================
  #   Configure Redis
  #============================================================================

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      password: ${REDIS_PASSWORD:fantasy_redis}
      port: ${REDIS_PORT:6379}


  #============================================================================
  #   Configure Pulsar
  #============================================================================
  pulsar:
    client:
      enable-busy-wait: false
      service-url: pulsar://88.198.150.195:6650
      auth-plugin-class-name: org.apache.pulsar.client.impl.auth.AuthenticationBasic
      authentication:
        user-id: pulsar
        password: pulsar




#============================================================================
#   Configure JobStore
#============================================================================
#spring.quartz.properties.org.quartz.jobStore.class=net.joelinn.quartz.jobstore.RedisJobStore
#spring.quartz.properties.org.quartz.jobStore.host= ${REDIS_HOST:localhost}
#spring.quartz.properties.org.quartz.jobStore.misfireThreshold = 60000
#spring.quartz.properties.org.quartz.jobStore.useProperties=true


#============================================================================
#   Configure Cluster properties
#============================================================================
#org.quartz.jobStore.isClustered=true
#spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=20000

