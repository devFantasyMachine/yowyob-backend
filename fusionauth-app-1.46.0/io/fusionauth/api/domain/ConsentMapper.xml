<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.fusionauth.api.domain.ConsentMapper">
  <resultMap id="UserConsent" type="io.fusionauth.domain.UserConsent">
    <id property="id" column="uc_id"/>
    <result property="consentId" column="uc_consents_id"/>
    <result property="dataFromDatabase" column="uc_data"/>
    <result property="giverUserId" column="uc_giver_users_id"/>
    <result property="insertInstant" column="uc_insert_instant"/>
    <result property="lastUpdateInstant" column="uc_last_update_instant"/>
    <result property="userId" column="uc_users_id"/>
    <association property="consent" resultMap="Consent"/>
  </resultMap>

  <resultMap id="EmailPlusConsent" type="io.fusionauth.api.domain.ConsentMapper$EmailPlusConsent">
    <id property="id" column="id"/>
    <result property="userConsentId" column="user_consents_id"/>
    <result property="nextEmailInstant" column="next_email_instant"/>
  </resultMap>

  <sql id="selectUserConsents">
    SELECT
      uc.id                             AS uc_id,
      uc.consents_id                    AS uc_consents_id,
      uc.data                           AS uc_data,
      uc.insert_instant                 AS uc_insert_instant,
      uc.giver_users_id                 AS uc_giver_users_id,
      uc.last_update_instant            AS uc_last_update_instant,
      uc.users_id                       AS uc_users_id,
      c.id                              AS c_id,
      c.consent_email_templates_id      AS c_consent_email_templates_id,
      c.data                            AS c_data,
      c.name                            AS c_name,
      c.email_plus_email_templates_id   AS c_email_plus_email_templates_id
    FROM user_consents AS uc
    INNER JOIN consents AS c ON uc.consents_id = c.id
  </sql>

  <sql id="selectConsents">
    SELECT
      c.id                            AS c_id,
      c.consent_email_templates_id    AS c_consent_email_templates_id,
      c.data                          AS c_data,
      c.name                          AS c_name,
      c.insert_instant                AS c_insert_instant,
      c.last_update_instant           AS c_last_update_instant,
      c.email_plus_email_templates_id AS c_email_plus_email_templates_id
    FROM consents AS c
  </sql>

  <resultMap id="Consent" type="io.fusionauth.domain.Consent">
    <id property="id" column="c_id"/>
    <result property="consentEmailTemplateId" column="c_consent_email_templates_id"/>
    <result property="dataFromDatabase" column="c_data"/>
    <result property="name" column="c_name"/>
    <result property="insertInstant" column="c_insert_instant"/>
    <result property="lastUpdateInstant" column="c_last_update_instant"/>
    <result property="emailPlus.emailTemplateId" column="c_email_plus_email_templates_id"/>
  </resultMap>

  <insert id="createUserConsent">
    INSERT INTO user_consents (id, data, giver_users_id, insert_instant, last_update_instant, consents_id, users_id)
    VALUES(#{id}, #{dataToDatabase}, #{giverUserId}, #{insertInstant}, #{lastUpdateInstant}, #{consentId}, #{userId})
  </insert>

  <insert id="createConsent">
    INSERT INTO consents (id, consent_email_templates_id, data, name, insert_instant, last_update_instant, email_plus_email_templates_id)
    VALUES(#{id}, #{consentEmailTemplateId}, #{dataToDatabase}, #{name}, #{insertInstant}, #{lastUpdateInstant}, #{emailPlus.emailTemplateId})
  </insert>

  <delete id="deleteConsent">
    DELETE FROM consents WHERE id = #{consentId}
  </delete>

  <delete id="deleteUserConsentsByConsentId">
    DELETE FROM user_consents WHERE consents_id = #{consentId}
  </delete>

  <select id="retrieveUserConsentByUserId" resultMap="UserConsent">
    <include refid="selectUserConsents"/>
    WHERE uc.users_id = #{userId}
  </select>

  <select id="retrieveUserConsentByGiverId" resultMap="UserConsent">
    <include refid="selectUserConsents"/>
    WHERE uc.giver_users_id = #{userId}
  </select>

  <select id="retrieveAllUserConsentsOrGivenByUserId" resultMap="UserConsent">
    <include refid="selectUserConsents"/>
    WHERE uc.giver_users_id = #{userId} OR uc.users_id = #{userId}
  </select>

  <select id="retrieveUserConsentById" resultMap="UserConsent">
    <include refid="selectUserConsents"/>
    WHERE uc.id = #{userConsentId}
  </select>

  <select id="retrieveAllConsents" resultMap="Consent">
    <include refid="selectConsents"/>
  </select>

  <select id="retrieveExistingConsent" resultMap="Consent">
    <include refid="selectConsents"/>
    WHERE
    <if test="id != null">
      c.id != #{id} AND
    </if>
    c.name = #{name}
  </select>

  <select id="retrieveConsentById" resultMap="Consent">
    <include refid="selectConsents"/>
    WHERE c.id = #{consenId}
  </select>

  <select id="retrieveConsentByName" resultMap="Consent">
    <include refid="selectConsents"/>
    WHERE c.name = #{name}
  </select>

  <select id="retrieveConsentsByCriteria" resultMap="Consent">
    <include refid="selectConsents"/>
    <where>
      <if test="name != null">
        AND LOWER(c.name) LIKE #{name}
      </if>
    </where>
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
    <if test="numberOfResults != null">
      LIMIT #{numberOfResults}
    </if>
    <if test="startRow != null">
      OFFSET #{startRow}
    </if>
  </select>

  <select id="retrieveConsentCountByCriteria" resultType="int">
    SELECT COUNT(*)
    FROM consents c
    <where>
      <if test="name != null">
        AND LOWER(c.name) LIKE #{name}
      </if>
    </where>
  </select>

  <update id="updateUserConsent">
    UPDATE user_consents SET
      data = #{dataToDatabase},
      giver_users_id = #{giverUserId},
      last_update_instant = #{lastUpdateInstant}
    WHERE id = #{id}
  </update>

  <update id="updateConsent">
    UPDATE consents SET
      consent_email_templates_id = #{consentEmailTemplateId},
      data = #{dataToDatabase},
      name = #{name},
      last_update_instant = #{lastUpdateInstant},
      email_plus_email_templates_id = #{emailPlus.emailTemplateId}
    WHERE id = #{id}
  </update>
</mapper>