<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.fusionauth.api.domain.KeyMapper">

  <resultMap id="Key" type="io.fusionauth.domain.Key">
    <id property="id" column="k_id"/>
    <result property="algorithm" column="k_algorithm"/>
    <result property="certificate" column="k_certificate"/>
    <result property="expirationInstant" column="k_expiration_instant"/>
    <result property="insertInstant" column="k_insert_instant"/>
    <result property="issuer" column="k_issuer"/>
    <result property="kid" column="k_kid"/>
    <result property="lastUpdateInstant" column="k_last_update_instant"/>
    <result property="name" column="k_name"/>
    <result property="privateKey" column="k_private_key"/>
    <result property="publicKey" column="k_public_key"/>
    <result property="secret" column="k_secret"/>
    <result property="type" column="k_type"/>
  </resultMap>

  <sql id="selectMysql">
    SELECT
     k.id                  AS k_id,
     k.algorithm           AS k_algorithm,
     k.certificate         AS k_certificate,
     k.expiration_instant  AS k_expiration_instant,
     k.insert_instant      AS k_insert_instant,
     k.issuer              AS k_issuer,
     k.kid                 AS k_kid,
     k.last_update_instant AS k_last_update_instant,
     k.name                AS k_name,
     k.private_key         AS k_private_key,
     k.public_key          AS k_public_key,
     k.secret              AS k_secret,
     k.type                AS k_type
     FROM `keys` as k
  </sql>

  <sql id="selectPostgresql">
    SELECT
     k.id                  AS k_id,
     k.algorithm           AS k_algorithm,
     k.certificate         AS k_certificate,
     k.expiration_instant  AS k_expiration_instant,
     k.insert_instant      AS k_insert_instant,
     k.issuer              AS k_issuer,
     k.kid                 AS k_kid,
     k.last_update_instant AS k_last_update_instant,
     k.name                AS k_name,
     k.private_key         AS k_private_key,
     k.public_key          AS k_public_key,
     k.secret              AS k_secret,
     k.type                AS k_type
     FROM keys as k
  </sql>

  <insert id="create" databaseId="mysql">
    INSERT INTO `keys` (
     id, algorithm, certificate, expiration_instant, insert_instant, issuer, kid, last_update_instant, name, private_key, public_key, secret, type )
    VALUES (
     #{id}, #{algorithm}, #{certificate}, #{expirationInstant}, #{insertInstant}, #{issuer}, #{kid}, #{lastUpdateInstant}, #{name}, #{privateKey}, #{publicKey}, #{secret}, #{type} )
  </insert>

  <insert id="create" databaseId="postgresql">
    INSERT INTO keys (
     id, algorithm, certificate, expiration_instant, insert_instant, issuer, kid, last_update_instant, name, private_key, public_key, secret, type )
    VALUES (
     #{id}, #{algorithm}, #{certificate}, #{expirationInstant}, #{insertInstant}, #{issuer}, #{kid}, #{lastUpdateInstant}, #{name}, #{privateKey}, #{publicKey}, #{secret}, #{type} )
  </insert>

  <delete id="delete" databaseId="mysql">
    DELETE FROM `keys` WHERE id = #{id}
  </delete>

  <delete id="delete" databaseId="postgresql">
    DELETE FROM keys WHERE id = #{id}
  </delete>

  <select id="retrieveAll" resultMap="Key" databaseId="mysql">
    <include refid="selectMysql"/>
    ORDER BY k.insert_instant DESC
  </select>

  <select id="retrieveAll" resultMap="Key" databaseId="postgresql">
    <include refid="selectPostgresql"/>
    ORDER BY k.insert_instant DESC
  </select>

  <select id="retrieveByCriteria" resultMap="Key" databaseId="mysql">
    <include refid="selectMysql"/>
    <where>
      <if test="algorithm != null">
        AND k.algorithm = #{algorithm}
      </if>
      <if test="name != null">
        AND LOWER(k.name) LIKE #{name}
      </if>
      <if test="type != null">
        AND k.type = #{type}
      </if>
    </where>
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
    <if test="numberOfResults != null">
      LIMIT #{numberOfResults}
    </if>
    <if test="startRow != null">
      OFFSET #{startRow}
    </if>
  </select>

  <select id="retrieveByCriteria" resultMap="Key" databaseId="postgresql">
    <include refid="selectPostgresql"/>
    <where>
      <if test="algorithm != null">
        AND k.algorithm = #{algorithm}
      </if>
      <if test="name != null">
        AND LOWER(k.name) LIKE #{name}
      </if>
      <if test="type != null">
        AND k.type = #{type}
      </if>
    </where>
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
    <if test="numberOfResults != null">
      LIMIT #{numberOfResults}
    </if>
    <if test="startRow != null">
      OFFSET #{startRow}
    </if>
  </select>

  <select id="retrieveById" resultMap="Key" databaseId="mysql">
    <include refid="selectMysql"/>
    WHERE k.id = #{id}
  </select>

  <select id="retrieveById" resultMap="Key" databaseId="postgresql">
    <include refid="selectPostgresql"/>
    WHERE k.id = #{id}
  </select>

  <select id="retrieveByKid" resultMap="Key" databaseId="mysql">
    <include refid="selectMysql"/>
    WHERE k.kid = #{kid}
  </select>

  <select id="retrieveByKid" resultMap="Key" databaseId="postgresql">
    <include refid="selectPostgresql"/>
    WHERE k.kid = #{kid}
  </select>

  <select id="retrieveByName" resultMap="Key" databaseId="mysql">
    <include refid="selectMysql"/>
    WHERE k.name = #{name}
  </select>

  <select id="retrieveByName" resultMap="Key" databaseId="postgresql">
    <include refid="selectPostgresql"/>
    WHERE k.name = #{name}
  </select>

  <select id="retrieveCountByCriteria" resultType="int" databaseId="mysql">
    SELECT COUNT(*)
    FROM `keys` k
    <where>
      <if test="algorithm != null">
        AND k.algorithm = #{algorithm}
      </if>
      <if test="name != null">
        AND LOWER(k.name) LIKE #{name}
      </if>
      <if test="type != null">
        AND k.type = #{type}
      </if>
    </where>
  </select>

  <select id="retrieveCountByCriteria" resultType="int" databaseId="postgresql">
    SELECT COUNT(*)
    FROM keys k
    <where>
      <if test="algorithm != null">
        AND k.algorithm = #{algorithm}
      </if>
      <if test="name != null">
        AND LOWER(k.name) LIKE #{name}
      </if>
      <if test="type != null">
        AND k.type = #{type}
      </if>
    </where>
  </select>

  <select id="retrieveExisting" resultMap="Key" databaseId="mysql">
    <include refid="selectMysql"/>
    WHERE
    <if test="id != null">
      k.id != #{id} AND
    </if>
    k.name = #{name}
  </select>

  <select id="retrieveExisting" resultMap="Key" databaseId="postgresql">
    <include refid="selectPostgresql"/>
    WHERE
    <if test="id != null">
      k.id != #{id} AND
    </if>
    k.name = #{name}
  </select>

  <update id="update" databaseId="mysql">
    UPDATE `keys`
    SET
    name                = #{name},
    last_update_instant = #{lastUpdateInstant}
    WHERE id = #{id}
  </update>

  <update id="update" databaseId="postgresql">
    UPDATE keys
    SET
    name                = #{name},
    last_update_instant = #{lastUpdateInstant}
    WHERE id = #{id}
  </update>

</mapper>
