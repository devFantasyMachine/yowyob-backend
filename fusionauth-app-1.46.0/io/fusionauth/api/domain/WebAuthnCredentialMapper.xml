<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.fusionauth.api.domain.WebAuthnCredentialMapper">
  <resultMap id="WebAuthnCredential" type="io.fusionauth.domain.WebAuthnCredential">
    <id property="id" column="w_id"/>
    <result property="credentialId" column="w_credential_id"/>
    <result property="tenantId" column="w_tenants_id"/>
    <result property="userId" column="w_users_id"/>
    <result property="dataFromDatabase" column="w_data"/>
    <result property="insertInstant" column="w_insert_instant"/>
    <result property="lastUseInstant" column="w_last_use_instant"/>
  </resultMap>

  <!--@formatter:off-->
  <sql id="select">
    SELECT
      w.id               AS w_id,
      w.credential_id    AS w_credential_id,
      w.tenants_id       AS w_tenants_id,
      w.users_id         AS w_users_id,
      w.data             AS w_data,
      w.insert_instant   AS w_insert_instant,
      w.last_use_instant AS w_last_use_instant
    FROM webauthn_credentials AS w
  </sql>
  <!--@formatter:on-->

  <insert id="create">
    INSERT INTO webauthn_credentials (id, credential_id, tenants_id, users_id, data, insert_instant, last_use_instant)
      VALUES (#{credential.id}, #{credential.credentialId}, #{credential.tenantId}, #{credential.userId}, #{credential.dataToDatabase}, #{credential.insertInstant}, #{credential.lastUseInstant})
  </insert>

  <insert id="createBulk">
    INSERT INTO webauthn_credentials (id, credential_id, tenants_id, users_id, data, insert_instant, last_use_instant)
          VALUES
    <foreach collection="credentials" item="credential" separator=",">
      (#{credential.id}, #{credential.credentialId}, #{credential.tenantId}, #{credential.userId}, #{credential.dataToDatabase}, #{credential.insertInstant}, #{credential.lastUseInstant})
    </foreach>
  </insert>

  <delete id="deleteByUserId">
    DELETE FROM webauthn_credentials
    WHERE users_id = #{userId}
  </delete>

  <select id="existsById" resultType="java.lang.Integer">
    SELECT 1
      FROM webauthn_credentials
      WHERE id = #{id} AND tenants_id = #{tenantId} LIMIT 1
  </select>

  <select id="retrieveByCredentialId" resultMap="WebAuthnCredential">
    <include refid="select"/>
    WHERE w.credential_id = #{credentialId}
    <if test="tenantId != null">
      AND w.tenants_id = #{tenantId}
    </if>
    <if test="userId != null">
      AND w.users_id = #{userId}
    </if>
  </select>

  <select id="retrieveById" resultMap="WebAuthnCredential">
      <include refid="select"/>
      WHERE w.id = #{id}
      <if test="tenantId != null">
        AND w.tenants_id = #{tenantId}
      </if>
    </select>

  <select id="retrieveByUserId" resultMap="WebAuthnCredential">
    <include refid="select"/>
    WHERE w.users_id = #{userId}
    <if test="tenantId != null">
      AND w.tenants_id = #{tenantId}
    </if>
  </select>

  <update id="update">
    UPDATE webauthn_credentials
    SET
      data             = #{dataToDatabase},
      last_use_instant = #{lastUseInstant}
    WHERE id = #{id}
  </update>

</mapper>